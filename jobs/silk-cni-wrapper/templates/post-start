#!/bin/bash



while curl localhost:23954; do
 if [ $? -eq 0 ]; then
   SILK_CIDR=$(curl -s localhost:23954 | cut -f4 -d'"')
   break;
 else
   sleep 1;
 fi

done
SERVICE_NETWORK_CIDR="10.100.0.0/16"
# ONLY USING INSERT, FIRST RULES ADDED WILL BE LAST ONES TO TRAVERSE, THUS EVERYTHING GETS LOGGED THAT DID NOT HIT ANOTHER CHAIN

for c in INPUT OUTPUT; do iptables -t raw -A $c -j LOG --log-prefix "DBG-RAW@$c: "; done
for c in INPUT OUTPUT; do iptables -t security -A $c -j LOG --log-prefix "DBG-SECURITY@$c: "; done
for c in INPUT OUTPUT; do iptables -t filter -A $c -j LOG --log-prefix "DBG-filter@$c: "; done

# OUTPUT eth0 ACCEPT
iptables -I OUTPUT -o eth0 -j ACCEPT
iptables -t nat -I OUTPUT -o eth0 -j ACCEPT
iptables -t security -I OUTPUT -o eth0 -j ACCEPT
iptables -t raw -I OUTPUT -o eth0 -j ACCEPT
# INPUT lo ACCEPT
iptables -I INPUT -i lo -j ACCEPT
iptables -t nat -I INPUT -i lo -j ACCEPT
iptables -t security -I INPUT -i lo -j ACCEPT
iptables -t raw -I INPUT -i lo -j ACCEPT
# OUTPUT lo ACCEPT
iptables -I OUTPUT -o lo -j ACCEPT
iptables -t nat -I OUTPUT -o lo -j ACCEPT
iptables -t security -I OUTPUT -o lo -j ACCEPT
iptables -t raw -I OUTPUT -o lo -j ACCEPT

# FORWARD ACCEPT POLICY
iptables -t nat -P FORWARD ACCEPT
iptables -t raw -P FORWARD ACCEPT
iptables -t security -P FORWARD ACCEPT

iptables -I KUBE-FIREWALL -s "$SILK_CIDR" -d "$SERVICE_NETWORK_CIDR" -j ACCEPT


# ALLOW ALL TRAFFIC ON KUBE MASTER
MASTER_HOSTNAMES=<% if_link("kube-apiserver") do |instances| instances.instances.map do |instance|%><%= instance.address %>,<% end end %>
# ALLOW ALL TRAFFIC ON KUBE MASTER
WORKER_HOSTNAMES=<% if_link("kubernetes-workers") do |instances| instances.instances.map do |instance|%><%= instance.address %>,<% end end %>

#ALLOW EVERYTHING ORIGINATING FROM MASTERS

